($define! copy-es-core ($lambda (x)
    ($define! aux ($lambda (x alist)
        ($if (not? (pair? x)) 
        (list x alist)
        ($let ((record (assoc x alist)))
            ($if (pair? record)
            (list (cdr record) alist)
            ($let ((y (cons () ())))
            ($let ((alist (cons (cons x y) alist)))
            ($let (((z alist) (aux (car x) alist)))
                (set-car! y z)
                ($let (((z alist) (aux (cdr x) alist)))
                (set-cdr! y z)
                (list y alist))))))))))
                (car (aux x ()))))